{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"pygments_lexer":"ipython3","nbconvert_exporter":"python","version":"3.6.4","file_extension":".py","codemirror_mode":{"name":"ipython","version":3},"name":"python","mimetype":"text/x-python"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2023-04-25T01:49:50.829402Z\",\"iopub.execute_input\":\"2023-04-25T01:49:50.830375Z\",\"iopub.status.idle\":\"2023-04-25T01:49:50.840068Z\",\"shell.execute_reply.started\":\"2023-04-25T01:49:50.830329Z\",\"shell.execute_reply\":\"2023-04-25T01:49:50.839181Z\"}}\n# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nimport matplotlib as plt\nimport sklearn\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score, classification_report, confusion_matrix\n\n#import joblib\nimport joblib\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2023-04-25T01:49:50.841538Z\",\"iopub.execute_input\":\"2023-04-25T01:49:50.842456Z\",\"iopub.status.idle\":\"2023-04-25T01:49:50.874659Z\",\"shell.execute_reply.started\":\"2023-04-25T01:49:50.842422Z\",\"shell.execute_reply\":\"2023-04-25T01:49:50.873480Z\"}}\n#import our dataset and print the first 5 rows\ndata = pd.read_csv('/kaggle/input/forest-fires-data-set/forestfires.csv')\ndata.head()\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2023-04-25T01:49:50.876460Z\",\"iopub.execute_input\":\"2023-04-25T01:49:50.876894Z\",\"iopub.status.idle\":\"2023-04-25T01:49:50.897972Z\",\"shell.execute_reply.started\":\"2023-04-25T01:49:50.876847Z\",\"shell.execute_reply\":\"2023-04-25T01:49:50.896633Z\"}}\n#explore last 5 rows\ndata.tail()\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2023-04-25T01:49:50.901414Z\",\"iopub.execute_input\":\"2023-04-25T01:49:50.901860Z\",\"iopub.status.idle\":\"2023-04-25T01:49:50.950196Z\",\"shell.execute_reply.started\":\"2023-04-25T01:49:50.901816Z\",\"shell.execute_reply\":\"2023-04-25T01:49:50.948838Z\"}}\ndata.describe()\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2023-04-25T01:49:50.951399Z\",\"iopub.execute_input\":\"2023-04-25T01:49:50.951702Z\",\"iopub.status.idle\":\"2023-04-25T01:49:50.965749Z\",\"shell.execute_reply.started\":\"2023-04-25T01:49:50.951671Z\",\"shell.execute_reply\":\"2023-04-25T01:49:50.964478Z\"}}\ndata.info()\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2023-04-25T01:49:50.967084Z\",\"iopub.execute_input\":\"2023-04-25T01:49:50.967744Z\",\"iopub.status.idle\":\"2023-04-25T01:49:50.993665Z\",\"shell.execute_reply.started\":\"2023-04-25T01:49:50.967710Z\",\"shell.execute_reply\":\"2023-04-25T01:49:50.992123Z\"}}\ndata['log_area'] = np.log10(data['area']+1)\ndata.head()\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2023-04-25T01:49:50.994961Z\",\"iopub.execute_input\":\"2023-04-25T01:49:50.996444Z\",\"iopub.status.idle\":\"2023-04-25T01:49:51.047118Z\",\"shell.execute_reply.started\":\"2023-04-25T01:49:50.996406Z\",\"shell.execute_reply\":\"2023-04-25T01:49:51.045970Z\"}}\ndata.describe()\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2023-04-25T01:49:51.048403Z\",\"iopub.execute_input\":\"2023-04-25T01:49:51.048727Z\",\"iopub.status.idle\":\"2023-04-25T01:49:51.303758Z\",\"shell.execute_reply.started\":\"2023-04-25T01:49:51.048695Z\",\"shell.execute_reply\":\"2023-04-25T01:49:51.302541Z\"}}\nplt.pyplot.scatter(data['X'], data['Y'],s = 20, c=data['log_area'], cmap='spring')\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2023-04-25T01:49:51.305326Z\",\"iopub.execute_input\":\"2023-04-25T01:49:51.306302Z\",\"iopub.status.idle\":\"2023-04-25T01:49:51.545219Z\",\"shell.execute_reply.started\":\"2023-04-25T01:49:51.306261Z\",\"shell.execute_reply\":\"2023-04-25T01:49:51.544379Z\"}}\nplt.pyplot.scatter(data['rain'],data['log_area'])\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2023-04-25T01:49:51.548643Z\",\"iopub.execute_input\":\"2023-04-25T01:49:51.549200Z\",\"iopub.status.idle\":\"2023-04-25T01:49:51.790284Z\",\"shell.execute_reply.started\":\"2023-04-25T01:49:51.549164Z\",\"shell.execute_reply\":\"2023-04-25T01:49:51.789060Z\"}}\nplt.pyplot.scatter(data['temp'],data['log_area'])\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2023-04-25T01:49:51.791903Z\",\"iopub.execute_input\":\"2023-04-25T01:49:51.792564Z\",\"iopub.status.idle\":\"2023-04-25T01:49:52.049430Z\",\"shell.execute_reply.started\":\"2023-04-25T01:49:51.792507Z\",\"shell.execute_reply\":\"2023-04-25T01:49:52.048567Z\"}}\nplt.pyplot.scatter(data['FFMC'],data['log_area'])\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2023-04-25T01:49:52.050762Z\",\"iopub.execute_input\":\"2023-04-25T01:49:52.051420Z\",\"iopub.status.idle\":\"2023-04-25T01:49:52.301044Z\",\"shell.execute_reply.started\":\"2023-04-25T01:49:52.051381Z\",\"shell.execute_reply\":\"2023-04-25T01:49:52.299721Z\"}}\nplt.pyplot.scatter(data['DMC'],data['log_area'])\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2023-04-25T01:49:52.302476Z\",\"iopub.execute_input\":\"2023-04-25T01:49:52.302807Z\",\"iopub.status.idle\":\"2023-04-25T01:49:52.540517Z\",\"shell.execute_reply.started\":\"2023-04-25T01:49:52.302774Z\",\"shell.execute_reply\":\"2023-04-25T01:49:52.539649Z\"}}\nplt.pyplot.scatter(data['wind'],data['log_area'])\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2023-04-25T01:49:52.541757Z\",\"iopub.execute_input\":\"2023-04-25T01:49:52.542365Z\",\"iopub.status.idle\":\"2023-04-25T01:49:52.782975Z\",\"shell.execute_reply.started\":\"2023-04-25T01:49:52.542328Z\",\"shell.execute_reply\":\"2023-04-25T01:49:52.781752Z\"}}\nplt.pyplot.scatter(data['ISI'],data['log_area'])\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2023-04-25T01:49:52.784667Z\",\"iopub.execute_input\":\"2023-04-25T01:49:52.785875Z\",\"iopub.status.idle\":\"2023-04-25T01:49:52.791126Z\",\"shell.execute_reply.started\":\"2023-04-25T01:49:52.785833Z\",\"shell.execute_reply\":\"2023-04-25T01:49:52.789736Z\"}}\ndef sev_val(row):\n    #Creates new column to indicate samples of interest\n    #We want the \n    if row['area'] <2:\n        val = 1\n    else:\n        val = 0\n    return(val)\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2023-04-25T01:49:52.792616Z\",\"iopub.execute_input\":\"2023-04-25T01:49:52.793085Z\",\"iopub.status.idle\":\"2023-04-25T01:49:52.817451Z\",\"shell.execute_reply.started\":\"2023-04-25T01:49:52.793049Z\",\"shell.execute_reply\":\"2023-04-25T01:49:52.816202Z\"}}\ndata['sev_index'] = data.apply(sev_val, axis=1)\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2023-04-25T01:49:52.818904Z\",\"iopub.execute_input\":\"2023-04-25T01:49:52.819377Z\",\"iopub.status.idle\":\"2023-04-25T01:49:52.832859Z\",\"shell.execute_reply.started\":\"2023-04-25T01:49:52.819340Z\",\"shell.execute_reply\":\"2023-04-25T01:49:52.831531Z\"}}\nx = data[['ISI','FFMC','wind','temp','rain']]\ny = data[['sev_index']]\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2023-04-25T01:49:52.834573Z\",\"iopub.execute_input\":\"2023-04-25T01:49:52.834981Z\",\"iopub.status.idle\":\"2023-04-25T01:49:52.846802Z\",\"shell.execute_reply.started\":\"2023-04-25T01:49:52.834925Z\",\"shell.execute_reply\":\"2023-04-25T01:49:52.845523Z\"}}\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state=42)\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2023-04-25T01:49:52.848505Z\",\"iopub.execute_input\":\"2023-04-25T01:49:52.849080Z\",\"iopub.status.idle\":\"2023-04-25T01:49:52.857437Z\",\"shell.execute_reply.started\":\"2023-04-25T01:49:52.849009Z\",\"shell.execute_reply\":\"2023-04-25T01:49:52.856255Z\"}}\nclf = RandomForestClassifier(max_depth=2,random_state=0)\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2023-04-25T01:49:52.859152Z\",\"iopub.execute_input\":\"2023-04-25T01:49:52.859965Z\",\"iopub.status.idle\":\"2023-04-25T01:49:53.023282Z\",\"shell.execute_reply.started\":\"2023-04-25T01:49:52.859912Z\",\"shell.execute_reply\":\"2023-04-25T01:49:53.022084Z\"}}\nclf.fit(X_train, y_train.values.ravel())\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2023-04-25T01:49:53.024724Z\",\"iopub.execute_input\":\"2023-04-25T01:49:53.025168Z\",\"iopub.status.idle\":\"2023-04-25T01:49:53.051510Z\",\"shell.execute_reply.started\":\"2023-04-25T01:49:53.025130Z\",\"shell.execute_reply\":\"2023-04-25T01:49:53.050421Z\"}}\ny_predict = clf.predict(X_test)\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2023-04-25T01:49:53.053328Z\",\"iopub.execute_input\":\"2023-04-25T01:49:53.053793Z\",\"iopub.status.idle\":\"2023-04-25T01:49:53.062588Z\",\"shell.execute_reply.started\":\"2023-04-25T01:49:53.053746Z\",\"shell.execute_reply\":\"2023-04-25T01:49:53.061433Z\"}}\naccuracy_score(y_test,y_predict)\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2023-04-25T01:49:53.063820Z\",\"iopub.execute_input\":\"2023-04-25T01:49:53.064312Z\",\"iopub.status.idle\":\"2023-04-25T01:49:55.362906Z\",\"shell.execute_reply.started\":\"2023-04-25T01:49:53.064278Z\",\"shell.execute_reply\":\"2023-04-25T01:49:55.361986Z\"}}\nplt.style.use('seaborn-whitegrid')\n\ndata.hist(bins=20, figsize=(14,10), color='#5D3FD3')\n#plt.show()\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2023-04-25T01:49:55.364157Z\",\"iopub.execute_input\":\"2023-04-25T01:49:55.365152Z\",\"iopub.status.idle\":\"2023-04-25T01:49:55.427302Z\",\"shell.execute_reply.started\":\"2023-04-25T01:49:55.365097Z\",\"shell.execute_reply\":\"2023-04-25T01:49:55.426112Z\"}}\n#saving the model to disk?\nfilename = 'finalized_model_clf.sav'\njoblib.dump(clf,filename)\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2023-04-25T01:49:55.429010Z\",\"iopub.execute_input\":\"2023-04-25T01:49:55.429377Z\",\"iopub.status.idle\":\"2023-04-25T01:49:55.498125Z\",\"shell.execute_reply.started\":\"2023-04-25T01:49:55.429343Z\",\"shell.execute_reply\":\"2023-04-25T01:49:55.496677Z\"}}\n#loading the model from disk\nloaded_model = joblib.load(filename)\nresult = loaded_model.score(X_test, y_test)\nprint(result)","metadata":{"_uuid":"f56aebab-23a1-4d68-b724-c6bbedcafc3f","_cell_guid":"c68edff7-8d6a-43d9-b01d-b705f0f8c566","collapsed":false,"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]}]}